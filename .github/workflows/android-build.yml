name: Build and Upload APK

on:
  push:
    tags:
      - 'v*.*.*'
      - '*.*.*'
      - 'v*.*.*-*' #
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release --dart-define=SUPABASE_KEY=$SUPABASE_KEY

      # Upload as artifact in Actions (optional)
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # Create or update GitHub release based on tag pushed
      - name: Get tag commit message
        id: get_commit_msg
        run: |
          echo "RELEASE_BODY<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=%B ${{ github.ref }} >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
